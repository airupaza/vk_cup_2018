import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
/*A. Проверка логина
ограничение по времени на тест1 секунда
ограничение по памяти на тест256 мегабайт
вводстандартный ввод
выводстандартный вывод
При регистрации в некоторой социальной сети пользователям предлагается придумать себе удобный логин, чтобы легко было оставить свой контакт для связи, напечатать его на визитках и так далее.

Логином может быть любая последовательность строчных и заглавных латинских букв, цифр и символов нижнего подчеркивания («_»). Однако, чтобы усложнить жизнь мошенникам и уменьшить число нелепых ситуаций из-за невнимательности пользователей, запрещено регистрировать логин, если он похож на хотя бы один из уже существующих логинов. А именно, два логина s и t считаются похожими, если один можно получить из другого путем некоторого количества последовательных применений следующих операций:

изменить регистр любой буквы (т. е. заменить строчную букву на заглавную или наоборот);
заменить букву «O» (заглавная латинская буква) на цифру «0» или наоборот;
заменить цифру «1» (один) на любую из букв «l» (строчная латинская буква «L»), «I» (заглавная латинская буква «i») или наоборот, или же заменить одну из этих букв на другую.
Например, логины «Codeforces» и «codef0rces», а также «OO0OOO00O0OOO0O00OOO0OO_lol» и «OO0OOO0O00OOO0O00OO0OOO_1oI» считаются похожими, а логины «Codeforces» и «Code_forces» — нет.

Вам дан список уже существующих логинов в социальной сети, среди которых нет похожих, и запрос пользователя на регистрацию нового логина. Проверьте, есть ли среди существующих логинов хотя бы один похожий на логин, который хочет зарегистрировать пользователь.

Входные данные
Первая строка содержит строку s, состоящую из строчных и заглавных латинских букв, цифр и символов нижнего подчеркивания («_»), длина которой не меньше 1 и не больше 50 — логин, который хочет зарегистрировать новый пользователь.

Вторая строка содержит одно целое число n (1 ≤ n ≤ 1 000) — число уже существующих логинов.

Следующие n строк содержат уже существующие логины, по одному в строке. Логины состоят только из строчных и заглавных латинских букв, цифр и символов нижнего подчеркивания («_»), длина логинов не меньше 1 и не больше 50 символов. Гарантируется, что среди имеющихся логинов нет похожих.

Выходные данные
Выведите «Yes» (без кавычек), если пользователь может зарегистрировать новый логин, то есть среди уже имеющихся логинов нет похожих.

В противном случае, выведите «No» (без кавычек).*/
public class A {
    public static void main(String[] args) throws IOException {
       BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));
       String login=reader.readLine().toLowerCase();
       int n=Integer.parseInt(reader.readLine());
       ArrayList<String> words=new ArrayList<String>();
       for (int i=0;i<n;i++){
           String s=reader.readLine();
           if (s!=null) words.add(s.toLowerCase());
       }
       boolean flag=true;
       char[] w1=login.toCharArray();
       if (w1.length>0) {
           for (char c:w1) if (!((c>='A'&&c<='z')||(c>='0'&&c<='9')||(c=='_'))) {flag=false; break;}
       }
       if ((flag!=false)&&(login!=null)&&(words.size()>0)){
           for (String word: words){
               if (word.length()==login.length()){
                   if (word.equals(login)) {flag=false; break;}
                   else {
                       char[] w2=word.toCharArray();
                       int control=0;
                       for (int i=0;i<word.length();i++){
                           if (w1[i]==w2[i]) control++;
                           else if ((w1[i]=='o'&&w2[i]=='0')||(w1[i]=='0'&&w2[i]=='o')) control++;
                           else if ((w1[i]=='1'&&w2[i]=='l')||(w1[i]=='1'&&w2[i]=='i')||(w1[i]=='l'&&w2[i]=='1')||(w1[i]=='l'&&w2[i]=='i')||(w1[i]=='i'&&w2[i]=='1')||(w1[i]=='i'&&w2[i]=='l')) control++;
                       }
                       if (control==word.length()) {flag=false; break;}
                   }
               }
               else flag=true;
           }
       }
       if (flag==false) System.out.print("No");
       else System.out.print("Yes");
    }
}
